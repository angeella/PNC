aes(x = Response_Time, color = Group)) +
geom_histogram(data = db,
aes(x = Response_Time, color = Group), alpha = .1) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE))) *
theme_classic()
ggplot() +
geom_density(data = db,
aes(x = Response_Time, color = Group)) +
geom_histogram(data = db,
aes(x = Response_Time, color = Group), alpha = .1) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE))) +
theme_classic()
ggplot() +
geom_density(data = db,
aes(x = Response_Time, color = Group)) +
geom_histogram(data = db,
aes(x = Response_Time, fill = Group), alpha = .1) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE))) +
theme_classic()
ggplot() +
geom_density(data = db,
aes(x = Response_Time, color = Group)) +
geom_histogram(data = db,
aes(x = Response_Time, fill = Group), alpha = .3) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE))) +
theme_classic()
ggplot() +
geom_density(data = db,
aes(x = Response_Time, color = Group)) +
geom_histogram(data = db,
aes(x = Response_Time, fill = Group), alpha = .3) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), linewidth = 2)+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE))) +
theme_classic()
ggplot() +
geom_density(data = db,
aes(x = Response_Time, color = Group)) +
geom_histogram(data = db,
aes(x = Response_Time, fill = Group), alpha = .3) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), linewidth = 2)+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE))) +
theme_classic()
ggplot() +
geom_density(data = db,
aes(x = Response_Time, color = Group)) +
geom_histogram(data = db,
aes(x = Response_Time, fill = Group), alpha = .3) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), width=.1)+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE))) +
theme_classic()
ggplot() +
geom_density(data = db,
aes(x = Response_Time, color = Group)) +
geom_histogram(data = db,
aes(x = Response_Time, fill = Group), alpha = .3) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), linewidth=.1)+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE))) +
theme_classic()
ggplot() +
geom_density(data = db,
aes(x = Response_Time, color = Group)) +
geom_histogram(data = db,
aes(x = Response_Time, fill = Group), alpha = .3) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.1)+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE))) +
theme_classic()
color = Group), size=2+
ggplot() +
geom_density(data = db,
aes(x = Response_Time, color = Group)) +
geom_histogram(data = db,
aes(x = Response_Time, fill = Group), alpha = .3) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=2)+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE))) +
theme_classic()
ggplot() +
geom_density(data = db,
aes(x = Response_Time, color = Group), size=2) +
geom_histogram(data = db,
aes(x = Response_Time, fill = Group), alpha = .3) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE))) +
theme_classic()
ggplot()  +
geom_histogram(data = db,
aes(x = Response_Time, fill = Group), alpha = .3) +
geom_density(data = db,
aes(x = Response_Time, color = Group), size=2) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE))) +
theme_classic()
ggplot()  +
geom_histogram(data = db,
aes(x = Response_Time, fill = Group), alpha = .3)
ggplot()  +
geom_histogram(data = db,
aes(x = Response_Time, fill = Group), alpha = .3) +
geom_density(data = db,
aes(x = Response_Time, color = Group), size=2)
ggplot()  +
geom_histogram(data = db,
aes(x = Response_Time, fill = Group), alpha = .3, binwidth = 2.5) +
geom_density(data = db,
aes(y=2.5 * ..count.., color = Group), size=2) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE))) +
theme_classic()
ggplot()  +
geom_histogram(data = db,
aes(x = Response_Time, fill = Group), alpha = .3, binwidth = 2.5)
ggplot()  +
geom_density(data = db,
aes(x = Response_Time, color = Group), size=2) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE))) +
theme_classic()
ggplot()  +
geom_density(data = db,
aes(x = Response_Time, color = Group), size=1) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group))+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE))) +
theme_classic()
ggplot()  +
geom_density(data = db,
aes(x = Response_Time, color = Group), size=1) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.5)+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.5)+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE)), size=.5) +
theme_classic()
ggplot()  +
geom_density(data = db,
aes(x = Response_Time, color = Group), size=1) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.8)+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.8)+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE)), size=.8) +
theme_classic()
ggplot()  +
geom_density(data = db,
aes(x = Response_Time, color = Group), size=1) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.8, linetype = "dotdashed")+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.8)+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE)), size=.8) +
theme_classic()
ggplot()  +
geom_density(data = db,
aes(x = Response_Time, color = Group), size=1) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.8, linetype = "dashed")+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.8)+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE)), size=.8) +
theme_classic()
ggplot()  +
geom_density(data = db,
aes(x = Response_Time, color = Group), size=1) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.8, linetype = "dasheddotted")+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.8)+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE)), size=.8) +
theme_classic()
ggplot()  +
geom_density(data = db,
aes(x = Response_Time, color = Group), size=1) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.8, linetype = "dotteddashed")+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.8)+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE)), size=.8) +
theme_classic()
ggplot()  +
geom_density(data = db,
aes(x = Response_Time, color = Group), size=1) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.8, linetype = "dotted")+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.8)+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE)), size=.8) +
theme_classic()
ggplot()  +
geom_density(data = db,
aes(x = Response_Time, color = Group), size=1) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.8, linetype = "dotted")+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.8, linetype = "dotted")+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE)), size=.8, linetype = "dashed") +
theme_classic()
db %>% filter(Response_Time == NA)
db %>% filter(is.na(Response_Time)
)
which(db$Response_Time > quantile(db$Response_Time, .9))
db <- na.omit(db)
which(db$Response_Time > quantile(db$Response_Time, .9))
which(db$Response_Time > quantile(db$Response_Time, .99))
idx <- which(db$Response_Time > quantile(db$Response_Time, .99))
db[idx,]
idx <- which(db$Response_Time > quantile(db$Response_Time, .999))
idx
idx <- which(db$Response_Time > quantile(db$Response_Time, .995))
idx
quantile(db$Response_Time, .995)
quantile(db$Response_Time, .998)
idx <- which(db$Response_Time > quantile(db$Response_Time, .998))
idx
idx <- which(db$Response_Time > quantile(db$Response_Time, .99))
db[idx,]
db[db$Response_Time > 4000, c(ID)]
db[db$Response_Time > 4000, "ID"]
library(GGally)
ggcorr(db)
knitr::opts_chunk$set(echo = T, fig.align = "center", out.width = '80%', warning = F, message = F)
# Correlogram
library(ggcorrplot)
install.packages("ggcorrplot")
library(ggcorrplot)
str(db)
# Correlation matrix
corr_matrix <- round(cor(db[,!(colnames(db) %in% c("Sex", "Group", "ID"))]), 2)
corr_matrix[lower.tri(corr_matrix)] <- 0
corr_matrix
# Correlogram
#install.packages("ggcorrplot")
library(ggcorrplot)
ggcorrplot(corr_matrix, type = "upper", lab = T, lab_size = 7, outline.col = "white",
colors = c("tomato2", "white", "springgreen3"), title = "", ggtheme = theme_gray,
p.mat = cor_pmat(corr_matrix), pch.cex = 30, tl.cex = 20)
corr_matrix
# Correlogram
#install.packages("ggcorrplot")
library(ggcorrplot)
ggcorrplot(corr_matrix, type = "upper", lab = T, lab_size = 7, outline.col = "white", colors = c("tomato2", "white", "springgreen3"), title = "", ggtheme = theme_gray, pch.cex = 30, tl.cex = 20)
# Correlation matrix
corr_matrix <- round(cor(db[,!(colnames(db) %in% c("Sex", "Group", "ID"))], na.rm = TRUE), 2)
# Correlation matrix
corr_matrix <- round(cor(db[,!(colnames(db) %in% c("Sex", "Group", "ID"))], na.omit= TRUE), 2)
# Correlation matrix
corr_matrix <- round(cor(db[,!(colnames(db) %in% c("Sex", "Group", "ID"))]), 2)
corr_matrix[lower.tri(corr_matrix)] <- 0
corr_matrix
# Correlogram
#install.packages("ggcorrplot")
library(ggcorrplot)
ggcorrplot(corr_matrix,
type = "upper",
lab = T,
lab_size = 7,
outline.col = "white",
colors = c("tomato2", "white", "springgreen3"),
title = "",
ggtheme = theme_gray,
pch.cex = 30,
tl.cex = 20)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
set.seed(1234)
generateData <- function(time){
db <- data.frame(Age = sample(c(15:60), 50, replace = TRUE),
Sex = sample(c(0, 1), 50, replace = TRUE),
Group = c(rep(0, 25),rep(1, 25)))
db <- db %>% mutate(ATTC1 = ifelse(Group == 1,
sample(c(3,4),1),
sample(c(1:4),1)),
Response_Time = log(Age) * rgamma(50, shape = 300) +
log(time) * rgamma(50, shape = 300) +
Sex * rgamma(50, shape = 300) +
Group *rgamma(50, shape = 300) +
log(ATTC1) * rgamma(50, shape = 300))
return(db)
}
db <- sapply(c(1:10), function(x) generateData(x), simplify = FALSE)
db <- bind_rows(db)
db$Time <- rep(1:10, each = 50)
db$ID <- rep(1:50, 10)
row_idx <- sample(c(1:500), 2)
db[row_idx, "Response_Time"] <- db[row_idx, "Response_Time"] + 4000
row_idx <- sample(c(1:500), 2)
db[row_idx, "Response_Time"] <- NA
db <- db %>%
mutate(Sex = ifelse(Sex == 0, "M", "F"),
Group = ifelse(Group == "0", "Control", "Case"))
write.csv(x = db, file = "data/our_first_db.csv",row.names = FALSE)
db <- read.csv("data/our_first_db.csv")
str(db) # or db %>% str()
summary(db)
# Variable "Group"
db$Group <- as.factor(db$Group)
levels(db$Group)
# Variable "Sex"
db$Sex <- as.factor(db$Sex)
levels(db$Sex)
db <- db %>% mutate_if(is.character, as.factor)
str(db)
knitr::include_graphics("Images/piebert.gif")
plot(x = db$Age, y = db$Response_Time)
ggplot(data = db,
mapping = aes(x = Response_Time)) +
geom_histogram()
ggplot(data = db,
mapping = aes(x = Response_Time)) +
geom_histogram(fill = "red") +
theme_classic() +
xlab("Response time")
ggplot() +
geom_histogram(data = db, aes(x = Response_Time,
fill = Group))+
geom_vline(data = db, aes(xintercept = mean(Response_Time, na.rm = TRUE)),
linetype="dashed", size=1)+
geom_vline(data = db %>% filter(Group =="Case"),
aes(xintercept= mean(Response_Time, na.rm = TRUE),
colour =Group),
linetype="dashed",
size=1)+
geom_vline(data = db %>% filter(Group =="Control"),
aes(xintercept=mean(Response_Time, na.rm = TRUE),
colour = Group),
linetype="dashed",
size=1)
ggplot(data = db,
mapping = aes(x = Age,
y = Response_Time,
color = Group)) +
geom_point()
ggplot(data = db,
mapping = aes(x = Age, y = Response_Time, color = Group)) +
geom_point() +
facet_wrap(. ~Sex)+
scale_colour_discrete(name = "Group", labels = c("Individuals with Alzeihmer disease", "Healthy individuals")) +
ylab("Response time")
ggplot(data = db %>% filter(Time %in% c(1,5,10)),
mapping = aes(x = Time, y = Response_Time, group = ID, color = Group)) +
geom_line() +
geom_point(aes(fill=Group),
shape=21)
conf.interval <- 0.95
ci_quantile <- qt(conf.interval/2 + .5, 25-1)
rtwc_between <- db %>%
filter(Time %in% c(1,10))%>%
group_by(Group, Time) %>%
summarize(mean = mean(Response_Time, na.rm = TRUE),
sd = sd(Response_Time, na.rm = TRUE))
ggplot(data = rtwc_between,
mapping = aes(x = Time, y = mean, color = Group)) +
geom_line() +
geom_point(aes(fill=Group),
shape=21) +
geom_errorbar(aes(ymin=rtwc_between$mean-ci_quantile*rtwc_between$sd/sqrt(25-1), ymax=rtwc_between$mean+ci_quantile*rtwc_between$sd/sqrt(25-1), color = Group), width=.1)
ggplot(data = db,
mapping = aes(x = Response_Time, group = Time)) +
geom_boxplot() +
facet_grid(. ~Group)
ggplot()  +
geom_density(data = db,
aes(x = Response_Time, color = Group), size=1) +
geom_vline(data = db %>% filter(Group == "Case"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.8, linetype = "dotted")+
geom_vline(data = db %>% filter(Group == "Control"),
aes(xintercept = mean(Response_Time, na.rm = TRUE),
color = Group), size=.8, linetype = "dotted")+
geom_vline(data = db,
aes(xintercept = mean(Response_Time, na.rm = TRUE)), size=.8, linetype = "dashed") +
theme_classic()
ggplot(data = db,
mapping = aes(x = Group, fill = Sex)) +
geom_bar()
# Correlogram
#install.packages("ggcorrplot")
library(ggcorrplot)
ggcorrplot(corr_matrix,
type = "upper",
lab = T,
lab_size = 7,
outline.col = "white",
colors = c("tomato2", "white", "springgreen3"),
title = "",
ggtheme = theme_gray,
pch.cex = 30,
tl.cex = 20)
# Correlation matrix
corr_matrix <- round(cor(db[,!(colnames(db) %in% c("Sex", "Group", "ID"))]), 2)
corr_matrix[lower.tri(corr_matrix)] <- 0
corr_matrix
# Correlation matrix
corr_matrix <- round(cor(db[,!(colnames(db) %in% c("Sex", "Group", "ID"))], use = "complete.obs"), 2)
corr_matrix[lower.tri(corr_matrix)] <- 0
corr_matrix
