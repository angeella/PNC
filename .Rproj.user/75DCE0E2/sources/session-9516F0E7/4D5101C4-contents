library(jtools)
## ----echo=F------------------------------------------------------------------------------------
HappyHeaven <-
  read.table("http://users.stat.ufl.edu/~aa/cat/data/HappyHeaven.dat",
                        header = TRUE, stringsAsFactors = TRUE)
library(data.table)
?fread
## ----echo=F------------------------------------------------------------------------------------
head(HappyHeaven)
xtabs(count ~ happy + heaven, HappyHeaven)
head(HappyHeaven)
as.data.frame(xtabs(count ~ happy + heaven, HappyHeaven))

## ----echo=F------------------------------------------------------------------------------------
fit <- glm(count ~ happy + heaven,
           family = poisson,
           data = HappyHeaven)
# \lambda + \lambda^{happy}_pretty + \lambda^{happy}_very +
# \lambda^{heaven}_yes

summary(fit)
summ(fit, model.info = F, model.fit = F)

##
HappyHeaven$fit_main =  fitted(fit)
HappyHeaven$res_main = rstandard(fit,type = "pearson")

HappyHeaven

table_fitted = xtabs(fit_main ~ happy + heaven, HappyHeaven)
table_true = xtabs(count ~ happy + heaven, HappyHeaven)

table_true
table_fitted
library(epitools)
oddsratio(table_true,correction = F,method = "wald")$measure
oddsratio(table_fitted,correction = F,method = "wald")$meas


## ----echo=T------------------------------------------------------------------------------------
m2 = glm(count ~ happy * heaven, family = poisson, data = HappyHeaven)
m2 = glm(count ~ happy + heaven + happy:heaven, family = poisson, data = HappyHeaven)

HappyHeaven$fit_full =  fitted(m2)
HappyHeaven
xtabs(fit_full ~ happy + heaven, HappyHeaven)
summary(m2)
anova(fit, m2,test = "LRT")

## ---- echo = F---------------------------------------------------------------------------------
M = model.matrix(m2)
M
# Y = X \Beta + \eps
#Y (n * 1)
#Z (N * p)
model.matrix(count ~ happy * heaven,  data = HappyHeaven)
model.matrix(count ~ happy + heaven,  data = HappyHeaven)
HappyHeaven[,1:2]

## ----echo=F,eval=T-----------------------------------------------------------------------------
dd = read.csv("bad_health.csv")
head(dd)
tt = xtabs(tot ~ sex + educ + econ,data = dd[dd$age > 60,])
TT = as.data.frame(tt)
TT

tt[,,2]
tt[,,"yes"]

tt["F",,]
tt["M",,]

tt["F",,] + tt["M",,]

margin.table(tt, c(2,3))


str(tt)

## ----echo=F,eval=T-----------------------------------------------------------------------------
m_main = glm(Freq~(.),
             data=TT,family = "poisson")
summary(m_main)
TT$fit_main = fitted(m_main)
TT

margin.table(tt,c(1,2)) # MARGINAL table
tt[,,"no"] #CONDITIONAL table
tt[,,"yes"]

oddsratio(tt[,,"no"],method = "wald",correction = F)$meas
oddsratio(tt[,,"yes"],method = "wald",correction = F)$meas
oddsratio(margin.table(tt,c(1,2)),
          method = "wald",correction = F)$meas

## Now on fitted table - what do you expect? (think before running)
tt_fitted_main = xtabs(fit_main ~ sex + educ + econ, data= TT)
tt_fitted_main
oddsratio(tt_fitted_main[,,"no"],
          method = "wald",correction = F)$meas
oddsratio(tt_fitted_main[,,"yes"],
          method = "wald",correction = F)$meas
oddsratio(margin.table(tt_fitted_main,c(1,2)),
          method = "wald",correction = F)$meas

## ----echo=F,eval=T-----------------------------------------------------------------------------
m_inter = glm(Freq ~ sex + econ * educ + sex:educ,
              data=TT,family = "poisson")
summary(m_inter) # take a look at DF
# this model exclude the relationship between SEX and ECON, given EDUC level
TT$fit_inter = fitted(m_inter)
TT
tt_fitted_inter = xtabs(fit_inter ~ sex + educ + econ, data= TT)

# Think about the meaning of these tables here - what is
# the model assuming?

tt_fitted_inter[,,"yes"]
tt_fitted_inter[,,"no"]

oddsratio(tt_fitted_inter[,,"yes"],
          method = "wald",correction = F)$meas
oddsratio(tt_fitted_inter[,,"no"],
          method = "wald",correction = F)$meas

# compare with the data
oddsratio(tt[,,"yes"],method = "wald",correction = F)$meas
oddsratio(tt[,,"no"],method = "wald",correction = F)$meas

# Marginals are exactly modeled
oddsratio(margin.table(tt_fitted_inter,c(1,2)),
          method = "wald",correction = F)$data
oddsratio(margin.table(tt,c(1,2)),
          method = "wald",correction = F)$data

# Relation between econ and education
oddsratio(tt_fitted_inter["M",,],
          method = "wald",correction = F)$measure
oddsratio(tt_fitted_inter["F",,],
          method = "wald",correction = F)$measure

# What about here?
tt_fitted_inter[,"low",]
tt_fitted_inter[,"high",]
oddsratio(tt_fitted_inter[,"low",],
          method = "wald",correction = F)$meas
oddsratio(tt_fitted_inter[,"high",],
          method = "wald",correction = F)$meas
margin.table(tt_fitted_inter,c(1,3))
oddsratio(margin.table(tt_fitted_inter,c(1,3)),
          method = "wald",correction = F)$measu



## ---- echo=F-----------------------------------------------------------------------------------
TT$res_main =  rstandard(m_main,type = "pearson")
TT$res_inter =  rstandard(m_inter,type = "pearson")
nn = names(TT)[1:4]
# Just to tidy up results
TT[, c(nn, "fit_main", "res_main")]
TT[, c(nn, "fit_inter", "res_inter")]

## ----echo=T------------------------------------------------------------------------------------
# Other intermediate models - worth comparing them
m_SEd =  glm(Freq~sex*educ + econ, data=TT,
             family = "poisson")
m_SEc =  glm(Freq~sex * econ + educ, data=TT,
             family = "poisson")
m_EcEd =  glm(Freq~sex + econ * educ, data=TT,
              family = "poisson")


# General format to add / remove interactions
m_pairs= update(m_inter,formula = .~ . + sex:econ)
summary(m_pairs)

TT$fit_pairs = fitted(m_pairs)

tt_fitted_pairs = xtabs(fit_pairs ~ sex + educ + econ, data= TT)

oddsratio(tt_fitted_pairs[,,"no"],method = "wald",correction = F)$m
oddsratio(tt_fitted_pairs[,,"yes"],method = "wald",correction = F)$m
oddsratio(margin.table(tt_fitted_pairs,c(1,2)),method = "wald",correction = F)$m




