## ----setup, include=FALSE-----------------------------------------------------
options(htmltools.dir.version = FALSE,scipen = 2,digits=3)
#library(printr)
# OFFLINE
#xaringan::summon_remark()
library(dplyr)
library(kableExtra)
library(epitools)
knitr::opts_chunk$set(fig.retina = 2, fig.align = "center")


## ---- echo=F------------------------------------------------------------------
load("cleaned_data.RData")
dat = na.omit(dat_summ)
# kable(head(dat),row.names = F)

## ----echo=F-------------------------------------------------------------------
#dat %>% ungroup() %>% mutate(i = 1:n()) %>% filter(age > 65, y/n > .2)
id = c(1664,1675,3507:3510,10,1632)
kable(dat[id,],row.names = F)


## ----render="normal_print"----------------------------------------------------
m0 = glm(y / n ~ age, data = dat, weights = n, family = "binomial")


## ----render="normal_print",echo=F---------------------------------------------
# summary(m0)
# equivalent as (succes, failures). See ?family
# m0 = glm(cbind(cases, tot-cases)~age, data = dat, family = "binomial")
library(jtools)
print(summ(m0, model.info = F, model.fit = F,confint = T))
# 
#
pm = exp(coef(m0) %*% c(1,min(dat$age)))
pM = exp(coef(m0) %*% c(1,max(dat$age)))


## ----echo=F-------------------------------------------------------------------
age_range = seq(0,110,l = 100)
dat_pred = data.frame(age=age_range)
plot(age_range, predict(m0,dat_pred), xlab = "Age", ylab = "Fitted LOG-ODDS", type = "l")


## ----echo=F-------------------------------------------------------------------
age_range = seq(0,120,l = 100)
dat_pred = data.frame(age=age_range)
plot(age_range, predict(m0,dat_pred,type = "response"), xlab = "Age", ylab = "Fitted PROBABILITIES", type = "l")


## ----echo=F,fig.align='center'------------------------------------------------
dat2 = dat %>% ungroup() %>% group_by(age) %>% summarize(cases = sum(y),tot = sum(n) )
age_range = seq(18,70,l = 100)
dat_pred = data.frame(age=age_range)
prs = predict(m0,dat_pred,type = "response",se.fit = T)
plot(dat2$age, dat2$cases / dat2$tot, pch = 16,
     xlab = "Age", ylab = "ProbabilitÃ  stimate",xlim = range(age_range))
lines(age_range, predict(m0,dat_pred,type = "response"),col = 2, lwd = 3)
legend("topleft", legend = rev(c("Prob stimate", "Dati osservati")),
       col = c(1,2),pch = c(16,NA), lty = c(NA,1), lwd = c(NA,3))


## ----echo=F-------------------------------------------------------------------
m1 = glm( y / n ~ age + edu, data = dat, weights = n, 
         family = "binomial")
print(summ(m1, model.info = F, model.fit = F,confint = T))
ageM = 65
odds_alto = exp(coef(m1) %*% c(1,ageM,0))
odds_basso = exp(coef(m1) %*% c(1,ageM,1))
pr_alto = odds_alto / (1+odds_alto)
pr_basso = odds_basso / (1+odds_basso)


## ----echo=F,eval=T,fig.align='center'-----------------------------------------
age_range = seq(35,75,l = 100)
dat_pred = rbind(data.frame(age=age_range,edu = "low"),
                 data.frame(age=age_range,edu = "high"))

dat_predM = data.frame(age=age_range,edu = "low")
dat_predF = data.frame(age=age_range,edu = "high")
# plot(dat$age, dat$cases / dat$tot, pch = 16,
# plot(dat$age, dat$cases / dat$tot, pch = 16,
#      xlab = "Age", ylab = "Fitted PROBABILITIES",xlim = range(age_range), 
#      col = 2+("M" == dat$sex))
# lines(dat_pred$age, predict(m1,dat_pred,type = "response"),col = 2, lwd = 3)
plot(dat_predF$age, predict(m1,dat_predF),
     col = 2, lwd = 3, type = "l", xlab = "Ages", ylab = "Log-odds")
lines(dat_predM$age, predict(m1,dat_predM),
     col = 4, lwd = 3)
legend("topleft", legend = rev(c("edu bassa", "edu alta")),
       col = c(2,4), lty = c(1,1), lwd = c(3,3))


## ----echo=F,eval=T,fig.align='center'-----------------------------------------
#dat3 = dat %>% ungroup() %>% group_by(age,edu) %>% summarize(cases = sum(y),tot = sum(n) )
plot(dat_predF$age, predict(m1,dat_predF, type = "response"),
     col = 2, lwd = 3, type = "l", xlab = "Ages", ylab = "Prob")
lines(dat_predM$age, predict(m1,dat_predM, type = "response"),
     col = 4, lwd = 3)
legend("topleft", legend = rev(c("edu bassa", "edu alta")),
       col = c(2,4), lty = c(1,1), lwd = c(3,3))
#points(dat3$age, dat3$cases / dat3$tot, pch = 16, col = 2+2*(dat3$edu == "low"),
#     xlab = "Age", ylab = "ProbabilitÃ  stimate",xlim = range(age_range))


## ----echo=T-------------------------------------------------------------------
m2 = glm( y / n ~ age*sex, data = dat, weights = n, 
         family = "binomial")
summ(m2, model.info = F, model.fit = F,confint = T) %>% print


## ----echo=F,eval=T,fig.align='center'-----------------------------------------
age_range = seq(18,75,l = 100)
dat_pred = rbind(data.frame(age=age_range,sex = "male"),
                 data.frame(age=age_range,sex = "female"))

dat_predM = data.frame(age=age_range,sex = "male")
dat_predF = data.frame(age=age_range,sex = "female")
# plot(dat$age, dat$cases / dat$tot, pch = 16,
# plot(dat$age, dat$cases / dat$tot, pch = 16,
#      xlab = "Age", ylab = "Fitted PROBABILITIES",xlim = range(age_range), 
#      col = 2+("M" == dat$sex))
# lines(dat_pred$age, predict(m1,dat_pred,type = "response"),col = 2, lwd = 3)
plot(dat_predF$age, predict(m2,dat_predF),
     col = 2, lwd = 3, type = "l", xlab = "Ages", ylab = "Log-odds")
lines(dat_predM$age, predict(m2,dat_predM),
     col = 4, lwd = 3)
legend("topleft", legend = c("M", "F"),
       col = c(4,2), lwd = 3)


## ----echo=T, eval = F---------------------------------------------------------
## m4 = glm( y / n ~ (age+sex+edu)^2, data = dat, weights = n,
##          family = "binomial")


## ----echo=F,fig.width=10,fig.height=7-----------------------------------------
m5 = glm( y / n ~ age*regione, data = dat, weights = n, 
         family = "binomial")
age_range = seq(18,75,l = 100)
df = lapply(unique(dat$regione), function(x) data.frame(age = age_range, regione = x)) %>%
  do.call(rbind,.)
df$y = predict(m5,df)
library(ggplot2)
ggplot(df) + geom_line(aes(x=age,y=y, group = regione, col = regione)) + theme_bw()
#stratificato
#ggplot(df) + geom_line(aes(x=age,y=y)) + 
#  facet_wrap(~regione)+
#  theme_bw()


## ----echo=F-------------------------------------------------------------------
tmp = dat[id,]
tmp %>% relocate(regione) %>% kable


## ---- echo = F, eval = T,fig.width=4,fig.height=7-----------------------------
#id = c(1,2,35,36,66, 4, 5,6,7,39 )
Z = model.matrix(~-1 + regione,tmp)
colnames(Z) = gsub("regione", "", colnames(Z))
dz = reshape2::melt(Z)
dz$Var1 = factor(dz$Var1, levels = 10:1)
ggplot(dz) + 
  geom_tile(aes(Var2,Var1), fill = "white", color = "black") +
 geom_text(aes(Var2,Var1, label = value))+
 # scale_fill_gradient(low = "white", high = "black") +
  theme_bw() + xlab("") + ylab("=Z") +
  scale_y_discrete(expand = c(0,0)) +
  scale_x_discrete(position = "top",expand = c(0,0)) +
  theme(axis.text.x.top = element_text(face="bold", size = 14, angle = 65,hjust = -.1),
        axis.title.y.left  = element_text(angle = 180,hjust = 0.5,vjust = 0.2,face = "bold",size = 24))


## ----echo=F-------------------------------------------------------------------
zz = reshape2::melt(tcrossprod(Z))
zz$Var1 = factor(zz$Var1,10:1)
zz$Var2 = factor(zz$Var2,1:10)
ggplot(zz) + 
  geom_tile(aes(Var2,Var1, fill = value),show.legend = F) + 
 geom_text(aes(Var2,Var1, label = value, color = value), show.legend = F)+
scale_fill_gradient(low = "white", high = "gray50") +
scale_color_gradient(low = "black", high = "white") +
  theme_bw() + xlab("") + ylab("") +
  scale_y_discrete(expand = c(0,0)) +
  scale_x_discrete(position = "top",expand = c(0,0))


## ----echo=T, eval = F, cache = T----------------------------------------------
## library(lme4)
## # solo intercetta
## m7 = glmer( y / n ~ (1|regione) + scale(age), data = dat,
##            family = "binomial",weights = n)
## 
## # effetto casuale per regione e sesso (crossed)
## m7 = glmer( y / n ~ (1|regione:sex) + scale(age), data = dat,
##            family = "binomial",weights = n)
## 
## # intercetta e coefficienti
## m7 = glmer( y / n ~ scale(age) + (scale(age)|regione), data = dat,
##             family = "binomial",weights = n)


## ----cache=T------------------------------------------------------------------
library(lme4)
m7 = glmer( y / n ~ (scale(age)|regione), data = dat, 
            family = "binomial",weights = n)
ranef(m7) # per valutare previsioni degli effetti casuali


## ---- eval = T, results='hide', cache=T---------------------------------------
library(rstanarm)
m8 = stan_glmer(y / n ~ (1|regione) + scale(age), data = dat, 
            family = "binomial",weights = n, chains=1)

## -----------------------------------------------------------------------------
m8


## ----echo=T, eval = T,message=FALSE-------------------------------------------
library(tidyverse)
# Formato binario
dat_large= dat %>% uncount(n) %>% group_by(sex,age,regione,edu) %>%
  mutate(y = as.integer(row_number() <= y[1]))
# Matrici del disegno
X = model.matrix(~ scale(age) , dat_large) # Effetti fissi
Z = model.matrix(~1,dat_large) # Effetti casuali
idR = as.numeric(factor(dat_large$regione)) # ID gruppo ec


## ----echo=T, eval = T,message=F,results = 'hide', cache=T---------------------
# Stima del modello
library(glmmEP)
m10 = glmmEP(dat_large$y,Xfixed = X,Xrandom = Z,idNum = idR)

## ----echo=T, eval = T,message=F-----------------------------------------------
m10


## ----echo=F, eval = T, message = F,fig.width=10,fig.height=7------------------
pr = X %*% m10$parameters[1:NCOL(X),2] + m10$randomEffects[idR]
# lega con link probit
dat_large$yhat = drop(pnorm(pr))

dat_plot = dat_large %>% group_by(age,regione) %>% 
  summarise(yy =sum(y) / n(), yhat = yhat)

# previsione dal modello
ggplot(dat_plot) + 
  geom_point(aes(age,yy)) +
  geom_line(aes(age,yhat), col = "red", size = 1.2) +
  facet_wrap(~regione) + theme_bw()


## ----echo=F-------------------------------------------------------------------
knitr::include_graphics("end.gif")

